{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041C\\u0435\\u043B\\u0430\\u043D\\u0438\\u044F\\\\Documents\\\\GitHub\\\\online-web-mmo-rpg\\\\frontend\\\\src\\\\components\\\\character\\\\ClassGrid.tsx\";\nimport React from 'react';\nimport { FaStar } from 'react-icons/fa';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClassCard = ({\n  characterClass,\n  isSelected,\n  onClick\n}) => {\n  const renderStars = rating => {\n    return [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(FaStar, {\n      className: `star ${index < rating ? 'filled' : ''}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `class-card ${isSelected ? 'selected' : ''}`,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"class-icon\",\n      children: characterClass.iconUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: characterClass.iconUrl,\n        alt: characterClass.name,\n        className: \"pixel-art\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder-icon\",\n        children: characterClass.name[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"class-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"class-name\",\n        children: characterClass.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"class-rating\",\n        children: renderStars(characterClass.rating || 3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = ClassCard;\nexport const ClassGrid = ({\n  classes,\n  selectedClassId,\n  onSelectClass\n}) => {\n  // Group classes by armor type\n  const groupedClasses = classes.reduce((acc, characterClass) => {\n    const armorType = characterClass.armorType || 'Other';\n    if (!acc[armorType]) {\n      acc[armorType] = [];\n    }\n    acc[armorType].push(characterClass);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"class-groups\",\n    children: Object.entries(groupedClasses).map(([armorType, classes]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"class-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"armor-type\",\n        children: armorType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"class-grid\",\n        children: classes.map(characterClass => /*#__PURE__*/_jsxDEV(ClassCard, {\n          characterClass: characterClass,\n          isSelected: selectedClassId === characterClass.id,\n          onClick: () => onSelectClass(characterClass.id)\n        }, characterClass.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, armorType, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ClassGrid;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClassCard\");\n$RefreshReg$(_c2, \"ClassGrid\");","map":{"version":3,"names":["React","FaStar","jsxDEV","_jsxDEV","ClassCard","characterClass","isSelected","onClick","renderStars","rating","Array","map","_","index","className","fileName","_jsxFileName","lineNumber","columnNumber","children","iconUrl","src","alt","name","_c","ClassGrid","classes","selectedClassId","onSelectClass","groupedClasses","reduce","acc","armorType","push","Object","entries","id","_c2","$RefreshReg$"],"sources":["C:/Users/Мелания/Documents/GitHub/online-web-mmo-rpg/frontend/src/components/character/ClassGrid.tsx"],"sourcesContent":["import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { CharacterClass } from '../../types/character';\nimport { FaStar } from 'react-icons/fa';\nimport './styles.css';\n\ninterface ClassGridProps {\n    classes: CharacterClass[];\n    selectedClassId: number | null;\n    onSelectClass: (classId: number) => void;\n}\n\ninterface ClassCardProps {\n    characterClass: CharacterClass;\n    isSelected: boolean;\n    onClick: () => void;\n}\n\nconst ClassCard: React.FC<ClassCardProps> = ({ characterClass, isSelected, onClick }) => {\n    const renderStars = (rating: number) => {\n        return [...Array(5)].map((_, index) => (\n            <FaStar \n                key={index}\n                className={`star ${index < rating ? 'filled' : ''}`}\n            />\n        ));\n    };\n\n    return (\n        <div \n            className={`class-card ${isSelected ? 'selected' : ''}`}\n            onClick={onClick}\n        >\n            <div className=\"class-icon\">\n                {characterClass.iconUrl ? (\n                    <img \n                        src={characterClass.iconUrl} \n                        alt={characterClass.name}\n                        className=\"pixel-art\"\n                    />\n                ) : (\n                    <div className=\"placeholder-icon\">{characterClass.name[0]}</div>\n                )}\n            </div>\n            <div className=\"class-info\">\n                <div className=\"class-name\">{characterClass.name}</div>\n                <div className=\"class-rating\">{renderStars(characterClass.rating || 3)}</div>\n            </div>\n        </div>\n    );\n};\n\nexport const ClassGrid: React.FC<ClassGridProps> = ({ \n    classes, \n    selectedClassId, \n    onSelectClass \n}) => {\n    // Group classes by armor type\n    const groupedClasses = classes.reduce((acc, characterClass) => {\n        const armorType = characterClass.armorType || 'Other';\n        if (!acc[armorType]) {\n            acc[armorType] = [];\n        }\n        acc[armorType].push(characterClass);\n        return acc;\n    }, {} as Record<string, CharacterClass[]>);\n\n    return (\n        <div className=\"class-groups\">\n            {Object.entries(groupedClasses).map(([armorType, classes]) => (\n                <div key={armorType} className=\"class-group\">\n                    <h3 className=\"armor-type\">{armorType}</h3>\n                    <div className=\"class-grid\">\n                        {classes.map(characterClass => (\n                            <ClassCard\n                                key={characterClass.id}\n                                characterClass={characterClass}\n                                isSelected={selectedClassId === characterClass.id}\n                                onClick={() => onSelectClass(characterClass.id)}\n                            />\n                        ))}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}