{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041C\\u0435\\u043B\\u0430\\u043D\\u0438\\u044F\\\\Documents\\\\GitHub\\\\online-web-mmo-rpg\\\\frontend\\\\src\\\\pages\\\\menu\\\\CreateCharacterPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { CharacterForm } from '../../components/character/CharacterForm';\nimport { characterService } from '../../services/characterService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateCharacterPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [classes, setClasses] = useState([]);\n  const [races, setRaces] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const [classesData, racesData] = await Promise.all([characterService.getClasses(), characterService.getRaces()]);\n        setClasses(classesData);\n        setRaces(racesData);\n      } catch (err) {\n        const error = err instanceof Error ? err.message : 'Failed to load data';\n        setError(error);\n        if (error.includes('Not authenticated')) {\n          navigate('/login');\n        }\n      }\n    };\n    loadData();\n  }, [navigate]);\n  const handleSubmit = async formData => {\n    try {\n      await characterService.createCharacter(formData);\n      navigate('/menu');\n    } catch (err) {\n      const error = err instanceof Error ? err.message : 'Failed to create character';\n      setError(error);\n      if (error.includes('Not authenticated')) {\n        navigate('/login');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 shadow rounded\",\n          children: /*#__PURE__*/_jsxDEV(CharacterForm, {\n            classes: classes,\n            races: races,\n            onSubmit: handleSubmit,\n            onCancel: () => navigate('/menu'),\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateCharacterPage, \"TfEdsf4UBRkMbppcLCUbxaHaExc=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateCharacterPage;\nvar _c;\n$RefreshReg$(_c, \"CreateCharacterPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","useNavigate","CharacterForm","characterService","jsxDEV","_jsxDEV","CreateCharacterPage","_s","navigate","classes","setClasses","races","setRaces","error","setError","loadData","classesData","racesData","Promise","all","getClasses","getRaces","err","Error","message","includes","handleSubmit","formData","createCharacter","className","children","md","lg","onSubmit","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Мелания/Documents/GitHub/online-web-mmo-rpg/frontend/src/pages/menu/CreateCharacterPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { CharacterForm } from '../../components/character/CharacterForm';\nimport { characterService } from '../../services/characterService';\nimport { CharacterClass, CharacterRace, CharacterFormData } from '../../types/character';\n\nexport const CreateCharacterPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [classes, setClasses] = useState<CharacterClass[]>([]);\n  const [races, setRaces] = useState<CharacterRace[]>([]);\n  const [error, setError] = useState<string>('');\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const [classesData, racesData] = await Promise.all([\n          characterService.getClasses(),\n          characterService.getRaces()\n        ]);\n        \n        setClasses(classesData);\n        setRaces(racesData);\n      } catch (err) {\n        const error = err instanceof Error ? err.message : 'Failed to load data';\n        setError(error);\n        if (error.includes('Not authenticated')) {\n          navigate('/login');\n        }\n      }\n    };\n\n    loadData();\n  }, [navigate]);\n\n  const handleSubmit = async (formData: CharacterFormData) => {\n    try {\n      await characterService.createCharacter(formData);\n      navigate('/menu');\n    } catch (err) {\n      const error = err instanceof Error ? err.message : 'Failed to create character';\n      setError(error);\n      if (error.includes('Not authenticated')) {\n        navigate('/login');\n      }\n    }\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <Row className=\"justify-content-center\">\n        <Col md={8} lg={6}>\n          <div className=\"bg-white p-4 shadow rounded\">\n            <CharacterForm\n              classes={classes}\n              races={races}\n              onSubmit={handleSubmit}\n              onCancel={() => navigate('/menu')}\n              error={error}\n            />\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}