{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041C\\u0435\\u043B\\u0430\\u043D\\u0438\\u044F\\\\Documents\\\\GitHub\\\\online-web-mmo-rpg\\\\frontend\\\\src\\\\components\\\\character\\\\ClassGrid.tsx\";\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ClassGrid = ({\n  classes,\n  selectedClassId,\n  onSelectClass\n}) => {\n  return /*#__PURE__*/_jsxDEV(Row, {\n    xs: 2,\n    md: 4,\n    className: \"g-4\",\n    children: classes.map(characterClass => /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: `h-100 ${selectedClassId === characterClass.id ? 'border-primary' : ''}`,\n        onClick: () => onSelectClass(characterClass.id),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [characterClass.iconUrl && /*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: characterClass.iconUrl,\n          alt: characterClass.name,\n          style: {\n            height: '100px',\n            objectFit: 'cover'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: characterClass.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)\n    }, characterClass.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = ClassGrid;\nvar _c;\n$RefreshReg$(_c, \"ClassGrid\");","map":{"version":3,"names":["React","Row","Col","Card","jsxDEV","_jsxDEV","ClassGrid","classes","selectedClassId","onSelectClass","xs","md","className","children","map","characterClass","id","onClick","style","cursor","iconUrl","Img","variant","src","alt","name","height","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","_c","$RefreshReg$"],"sources":["C:/Users/Мелания/Documents/GitHub/online-web-mmo-rpg/frontend/src/components/character/ClassGrid.tsx"],"sourcesContent":["import React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { CharacterClass } from '../../types/character';\n\ninterface ClassGridProps {\n    classes: CharacterClass[];\n    selectedClassId: number | null;\n    onSelectClass: (classId: number) => void;\n}\n\nexport const ClassGrid: React.FC<ClassGridProps> = ({ \n    classes, \n    selectedClassId, \n    onSelectClass \n}) => {\n    return (\n        <Row xs={2} md={4} className=\"g-4\">\n            {classes.map(characterClass => (\n                <Col key={characterClass.id}>\n                    <Card \n                        className={`h-100 ${selectedClassId === characterClass.id ? 'border-primary' : ''}`}\n                        onClick={() => onSelectClass(characterClass.id)}\n                        style={{ cursor: 'pointer' }}\n                    >\n                        {characterClass.iconUrl && (\n                            <Card.Img \n                                variant=\"top\" \n                                src={characterClass.iconUrl} \n                                alt={characterClass.name}\n                                style={{ height: '100px', objectFit: 'cover' }}\n                            />\n                        )}\n                        <Card.Body className=\"text-center\">\n                            <Card.Title>{characterClass.name}</Card.Title>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            ))}\n        </Row>\n    );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASjD,OAAO,MAAMC,SAAmC,GAAGA,CAAC;EAChDC,OAAO;EACPC,eAAe;EACfC;AACJ,CAAC,KAAK;EACF,oBACIJ,OAAA,CAACJ,GAAG;IAACS,EAAE,EAAE,CAAE;IAACC,EAAE,EAAE,CAAE;IAACC,SAAS,EAAC,KAAK;IAAAC,QAAA,EAC7BN,OAAO,CAACO,GAAG,CAACC,cAAc,iBACvBV,OAAA,CAACH,GAAG;MAAAW,QAAA,eACAR,OAAA,CAACF,IAAI;QACDS,SAAS,EAAE,SAASJ,eAAe,KAAKO,cAAc,CAACC,EAAE,GAAG,gBAAgB,GAAG,EAAE,EAAG;QACpFC,OAAO,EAAEA,CAAA,KAAMR,aAAa,CAACM,cAAc,CAACC,EAAE,CAAE;QAChDE,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAU,CAAE;QAAAN,QAAA,GAE5BE,cAAc,CAACK,OAAO,iBACnBf,OAAA,CAACF,IAAI,CAACkB,GAAG;UACLC,OAAO,EAAC,KAAK;UACbC,GAAG,EAAER,cAAc,CAACK,OAAQ;UAC5BI,GAAG,EAAET,cAAc,CAACU,IAAK;UACzBP,KAAK,EAAE;YAAEQ,MAAM,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAQ;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CACJ,eACD1B,OAAA,CAACF,IAAI,CAAC6B,IAAI;UAACpB,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC9BR,OAAA,CAACF,IAAI,CAAC8B,KAAK;YAAApB,QAAA,EAAEE,cAAc,CAACU;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC,GAjBDhB,cAAc,CAACC,EAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBtB,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACG,EAAA,GA9BW5B,SAAmC;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}